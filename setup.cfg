# Automatically generated by nengo-bones, do not edit this file directly

[build_sphinx]
source-dir = docs
build-dir = docs/_build
all_files = 1

[coverage:run]
source = nengo_loihi

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    # place ``# pragma: no cover`` at the end of a line to ignore it
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # `pass` is just a placeholder, fine if it's not covered
    ^[ \t]*pass$

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:

# Patterns for files to exclude from reporting
omit =
    */tests/test*

[flake8]
exclude =
    __init__.py
ignore =
    E123
    E133
    E226
    E241
    E242
    E501
    E731
    F401
    W503
max-complexity = 10

[tool:pytest]
addopts = -p nengo.tests.options --simulator nengo_loihi.Simulator --ref-simulator nengo_loihi.Simulator --neurons nengo.LIF,nengo.SpikingRectifiedLinear
xfail_strict = False
norecursedirs =
    .*
    *.egg
    build
    dist
    docs
filterwarnings =
    ignore:Combining two lowpass synapses
    ignore:divide by zero
    ignore:invalid value encountered in
    ignore:Non-finite values detected in `max_rates`
nengo_test_unsupported =
    test_circularconv.py:*
        "no ensembles onchip"
    test_product.py:test_direct_mode_with_single_neuron
        "no ensembles onchip"
    test_connection.py:test_neuron_slicing
        "no ensembles onchip"
    test_connection.py:test_boolean_indexing
        "no ensembles onchip"
    test_learning_rules.py:test_pes_synapse*
        "no ensembles onchip"
    test_learning_rules.py:test_pes_recurrent_slice*
        "no ensembles onchip"
    test_neurons.py:test_amplitude[LIFRate]
        "no ensembles onchip"
    test_neurons.py:test_amplitude[RectifiedLinear]
        "no ensembles onchip"
    test_neurons.py:test_alif_rate
        "no ensembles onchip"
    test_neurons.py:test_izhikevich
        "no ensembles onchip"
    test_neurons.py:test_sigmoid_response_curves*
        "no ensembles onchip"
    test_node.py:test_time
        "no ensembles onchip"
    test_node.py:test_simple
        "no ensembles onchip"
    test_node.py:test_connected
        "no ensembles onchip"
    test_node.py:test_passthrough
        "no ensembles onchip"
    test_node.py:test_passthrough_filter
        "no ensembles onchip"
    test_node.py:test_circular
        "no ensembles onchip"
    test_node.py:test_outputparam_errors
        "no ensembles onchip"
    test_node.py:test_none
        "no ensembles onchip"
    test_node.py:test_unconnected_node
        "no ensembles onchip"
    test_node.py:test_set_arraylike_output
        "no ensembles onchip"
    test_node.py:test_set_callable_output
        "no ensembles onchip"
    test_node.py:test_set_output
        "no ensembles onchip"
    test_node.py:test_delay
        "no ensembles onchip"
    test_node.py:test_args
        "no ensembles onchip"
    test_node.py:test_node_with_offset_array_view
        "no ensembles onchip"
    test_node.py:test_node_with_unusual_strided_view
        "no ensembles onchip"
    test_probe.py:test_multirun
        "no ensembles onchip"
    test_probe.py:test_dts
        "no ensembles onchip"
    test_probe.py:test_large
        "no ensembles onchip"
    test_probe.py:test_conn_output
        "no ensembles onchip"
    test_processes.py:test_time
        "no ensembles onchip"
    test_processes.py:test_brownnoise
        "no ensembles onchip"
    test_processes.py:test_gaussian_white*
        "no ensembles onchip"
    test_processes.py:test_whitesignal*
        "no ensembles onchip"
    test_processes.py:test_reset
        "no ensembles onchip"
    test_processes.py:test_seed
        "no ensembles onchip"
    test_processes.py:test_present_input
        "no ensembles onchip"
    test_processes.py:TestPiecewise*
        "no ensembles onchip"
    test_simulator.py:test_steps
        "no ensembles onchip"
    test_simulator.py:test_time_absolute
        "no ensembles onchip"
    test_simulator.py:test_trange*
        "no ensembles onchip"
    test_simulator.py:test_probe_cache
        "no ensembles onchip"
    test_simulator.py:test_sim_seed_set_by_network_seed
        "no ensembles onchip"
    test_simulator.py:test_invalid_run_time
        "no ensembles onchip"
    test_simulator.py:test_sample_every*
        "no ensembles onchip"
    test_synapses.py:test_lowpass
        "no ensembles onchip"
    test_synapses.py:test_alpha
        "no ensembles onchip"
    test_synapses.py:test_triangle
        "no ensembles onchip"
    test_synapses.py:test_linearfilter
        "no ensembles onchip"
    test_synapses.py:test_synapse_subclass
        "no ensembles onchip"
    utils/*test_ensemble.py:test_*_curves_direct_mode*
        "no ensembles onchip"
    utils/*test_network.py:test_activate_direct_mode_learning[learning_rule1*
        "no ensembles onchip"
    utils/*test_network.py:test_activate_direct_mode_learning[learning_rule2*
        "no ensembles onchip"
    utils/*test_network.py:test_activate_direct_mode_learning[learning_rule3*
        "no ensembles onchip"
    utils/*test_neurons.py:test_rates_*
        "no ensembles onchip"
    test_transforms.py:test_convolution*
        "no ensembles onchip"
    test_synapses.py:test_combined_delay
        "no ensembles onchip"
    test_synapses.py:test_direct
        "no ensembles onchip"
    test_actionselection.py:test_basic
        "inaccurate"
    test_assoc_mem.py:test_am_threshold
        "integrator instability"
    test_assoc_mem.py:test_am_wta
        "integrator instability"
    test_assoc_mem.py:test_am_complex
        "integrator instability"
    test_ensemblearray.py:test_matrix_mul
        "inaccurate"
    test_product.py:test_sine_waves
        "inaccurate"
    test_workingmemory.py:test_inputgatedmemory
        "inaccurate"
    test_cortical.py:test_convolution
        "inaccurate"
    test_thalamus.py:test_routing
        "inaccurate"
    test_thalamus.py:test_nondefault_routing
        "inaccurate"
    test_connection.py:test_node_to_ensemble*
        "inaccurate"
    test_connection.py:test_neurons_to_node*
        "inaccurate"
    test_connection.py:test_function_and_transform
        "inaccurate"
    test_connection.py:test_weights*
        "inaccurate"
    test_connection.py:test_slicing*
        "inaccurate"
    test_connection.py:test_function_output_size
        "inaccurate"
    test_connection.py:test_function_points
        "inaccurate"
    test_ensemble.py:test_scalar*
        "inaccurate"
    test_ensemble.py:test_vector*
        "inaccurate"
    test_learning_rules.py:test_pes_transform
        "inaccurate"
    test_learning_rules.py:test_slicing
        "inaccurate"
    test_neurons.py:test_alif
        "inaccurate"
    test_neurons.py:test_amplitude[LIF]
        "inaccurate"
    test_neurons.py:test_amplitude[SpikingRectifiedLinear]
        "inaccurate"
    test_presets.py:test_thresholding_preset
        "inaccurate"
    test_synapses.py:test_decoders
        "inaccurate"
    test_actionselection.py:test_thalamus
        "inaccurate"
    test_connection.py:test_transform_probe
        "transform shape not implemented"
    test_connection.py:test_list_indexing*
        "indexing bug?"
    test_ensemble.py:test_gain_bias_warning
        "warning not raised"
    test_ensemble.py:*invalid_intercepts*
        "BuildError not raised"
    test_learning_rules.py:test_pes_ens_*
        "learning bug?"
    test_learning_rules.py:test_pes_weight_solver
        "learning bug?"
    test_learning_rules.py:test_pes_neuron_*
        "learning bug?"
    test_learning_rules.py:test_pes_multidim_error
        "dict of learning rules not handled"
    test_learning_rules.py:test_reset*
        "learning bug?"
    test_neurons.py:test_lif_min_voltage[-1]
        "min voltage bug?"
    test_neurons.py:test_lif_zero_tau_ref
        "lif.tau_ref ignored"
    test_probe.py:test_input_probe
        "shape mismatch"
    test_probe.py:test_slice
        "ObjView not handled properly"
    test_probe.py:test_update_timing
        "probe bug?"
    test_solvers.py:test_nosolver[*
        "NoSolver bug"
    test_neurons.py:test_reset*
        "sim.reset not working correctly"
    test_learning_rules.py:test_unsupervised*
        "non-PES learning rules not implemented"
    test_learning_rules.py:test_dt_dependence*
        "non-PES learning rules not implemented"
    test_voja*
        "voja not implemented"
    test_learning_rules.py:test_custom_type
        "non-PES learning rules not implemented"
    test_simulator.py:test_entry_point
        "logic should be more flexible"
    test_ensemble.py:test_noise*
        "ensemble.noise not implemented"
    test_connection.py:test_dist_transform
        "probe type not implemented"
    test_connection.py:test_decoder_probe
        "probe type not implemented"
    test_probe.py:test_defaults
        "probe type not implemented"
    test_probe.py:test_ensemble_encoders
        "probe type not implemented"
    test_integrator.py:test_integrator
        "probe.sample_every not implemented"
    test_oscillator.py:test_oscillator
        "probe.sample_every not implemented"
    test_ensemble.py:test_product*
        "probe.sample_every not implemented"
    test_neurons.py:test_dt_dependence*
        "probe.sample_every not implemented"
    test_probe.py:test_multiple_probes
        "probe.sample_every not implemented"
    test_ensemble.py:test_eval_points_heuristic[1290-4]
        "max number of compartments exceeded"
    test_ensemble.py:test_eval_points_heuristic[2108-1]
        "max number of compartments exceeded"
    test_neurons.py:test_lif[*
        "idx_bits out of range"
    test_basalganglia.py:test_basal_ganglia
        "output_axons exceeded max"
    test_cortical.py:test_connect
        "total synapse bits exceeded max"
    test_cortical.py:test_transform
        "total synapse bits exceeded max"
    test_cortical.py:test_translate
        "total synapse bits exceeded max"
    test_memory.py:test_run
        "total synapse bits exceeded max"
    test_memory.py:test_run_decay
        "total synapse bits exceeded max"
    test_state.py:test_memory_run
        "total synapse bits exceeded max"
    test_state.py:test_memory_run_decay
        "total synapse bits exceeded max"
    test_bind.py:test_run
        "exceeded max cores per chip on loihi"
    test_cache.py:*
        "model pickling not implemented"
    test_copy.py:test_pickle_model
        "model pickling not implemented"
    test_copy.py:test_pickle_sim[*
        "simulator pickling not implemented"
    test_simulator.py:test_signal_init_values
        "nengo.builder.Model instances not handled"
    test_simulator.py:test_simulator_progress_bars
        "progress bars not implemented"
    utils/tests/test_connection.py*
        "target_function (deprecated) not working"
    test_connection.py:test_zero_activities_error
        "decoded connection optimized away"
    test_connection.py:test_function_returns_none_error
        "decoded connection optimized away"
    test_solvers.py:test_non_compositional_solver_transform_error
        "1D convolution not supported"
    test_transforms.py:test_sparse[*
        "sparse transforms not supported"
    test_simulator.py:test_dtype[*
        "dtype option not supported"

[pylint]
# note: pylint doesn't look in setup.cfg by default, need to call it with
# `pylint ... --rcfile=setup.cfg`
ignore =
    compat.py,
disable =
    arguments-differ,
    assignment-from-no-return,
    attribute-defined-outside-init,
    blacklisted-name,
    comparison-with-callable,
    duplicate-code,
    fixme,
    import-error,
    invalid-name,
    invalid-sequence-index,
    len-as-condition,
    literal-comparison,
    no-else-raise,
    no-else-return,
    no-member,
    no-name-in-module,
    no-self-use,
    not-an-iterable,
    not-context-manager,
    protected-access,
    redefined-builtin,
    stop-iteration-return,
    too-few-public-methods,
    too-many-arguments,
    too-many-branches,
    too-many-instance-attributes,
    too-many-lines,
    too-many-locals,
    too-many-return-statements,
    too-many-statements,
    unexpected-keyword-arg,
    unidiomatic-typecheck,
    unsubscriptable-object,
    unsupported-assignment-operation,
    unused-argument,
    bad-continuation,
    broad-except,
    cell-var-from-loop,
    consider-using-enumerate,
    consider-using-in,
    expression-not-assigned,
    inconsistent-return-statements,
    logging-not-lazy,
    missing-docstring,
    no-value-for-parameter,
    not-callable,
    redefined-outer-name,
    superfluous-parens,
    undefined-loop-variable,
    unnecessary-pass,
    unused-import,
    unused-variable,
    wrong-import-position,
known-third-party =
    matplotlib,
    nengo,
    numpy,
    pytest,
    abr_control,
    nengo_dl,
    nengo_extras,
max-line-length = 79
valid-metaclass-classmethod-first-arg = metacls
reports = no
score = no
